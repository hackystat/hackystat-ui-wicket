<project name="build" default="compile">
  <description>
  The basic build file for the StackyHack system.
  </description>

  <!-- Always make environment variables available with the "env." prefix. -->
  <property environment="env" />

  <!-- Make sure we're running a Java 5 or better. -->
  <condition property="java.5.available">
    <or>
      <contains string="${java.version}" substring="1.5" />
      <contains string="${java.version}" substring="1.6" />
    </or>
  </condition>
  <fail message="This package requires Java 5 or 6." unless="java.5.available" />

  <!-- Make sure we're running Ant 1.7 . -->
  <condition property="ant.1.7.available">
    <contains string="${ant.version}" substring="1.7" />
  </condition>
  <fail message="This package requires Ant 1.7." unless="ant.1.7.available" />

  <!-- Make sure that a compatible version of JUnit is installed. -->
  <!-- You can override the version. For example: 'ant -Djunit.version=4.1 -f junit.build.xml' -->
  <property name="junit.version" value="4.4" />
  <property name="junit.jar" location="${env.JUNIT_HOME}/junit-${junit.version}.jar" />
  <available file="${junit.jar}" type="file" property="junit.available" />
  <fail message="This package requires JUNIT_HOME to be defined and ${junit.jar} available" unless="junit.available" />

  <!-- Make sure that the JAXB library is available (by default in Java 6, through manual installation in Java 5. -->
  <available classname="javax.xml.bind.JAXBContext" property="jaxb.available" />
  <fail message="This package requires JAXB to be installed" unless="jaxb.available" />

  <!-- Make sure that Hackystat SensorBase library is available . -->
  <available file="${env.HACKYSTAT_SENSORBASE_HOME}/sensorbase.jar" type="file" property="hackystat.sensorbase.available" />
  <fail message="${env.HACKYSTAT_SENSORBASE_HOME}/sensorbase.jar. This package requires the Hackystat SensorBase to be installed and HACKYSTAT_SENSORBASE_HOME defined" unless="hackystat.sensorbase.available" />

  <!-- Make sure that Jetty is available . -->
  <property name="jetty.version" value="6.1.9"/>
  <available file="${env.JETTY_HOME}/lib/jetty-${jetty.version}.jar" type="file" property="jetty.available" />
  <fail message="This package requires ${env.JETTY_HOME}/lib/jetty-${jetty.version}.jar to be installed and JETTY_HOME defined" unless="jetty.available" />
  
  <!-- Make sure that Wicket is available . -->
   <property name="wicket.version" value="1.3.2"/>
   <available file="${env.WICKET_HOME}/lib/wicket-${wicket.version}.jar" type="file" property="wicket.available" />
   <fail message="This package requires ${env.WICKET_HOME}/wicket-${wicket.version}.jar to be installed and WICKET_HOME defined" unless="wicket.available" />
  

  <!-- Basic properties for this system. -->
  <property name="system.name" value="hackystat-ui-wicket" />
  <property name="majorVersionNumber" value="8" />
  <property name="minorVersionNumber" value="x" />
  <tstamp>
    <format property="DAYSTAMP" pattern="Mdd" />
  </tstamp>
  <property name="version" value="${majorVersionNumber}.${minorVersionNumber}.${DAYSTAMP}" />

  <!-- Hackystat sensor definitions and configuration. -->
  <import file="hackystat.build.xml" />
  <property name="hackystat.verbose.mode" value="false" />
  <property name="hackystat.enable" value="true" />
  <!-- define hackystat.enabled if hackystat.enable is true, so we can use it in an 'if' clause -->
  <condition property="hackystat.enabled">
    <istrue value="${hackystat.enable}" />
  </condition>
  
  <!-- Basic directory structure. -->
  <property name="src.dir" location="${basedir}/src" />
  <property name="lib.dir" location="${basedir}/lib" />
  <property name="build.dir" location="${basedir}/build" />

  <!-- The compile classpath is useful to many tools. -->
  <path id="compile.classpath">
     <!-- Get Utilities, Restlet, Derby, etc. by including full sensorbase.jar. -->
     <fileset file="${env.HACKYSTAT_SENSORBASE_HOME}/sensorbase.jar" />
     <fileset file="${env.HACKYSTAT_DAILYPROJECTDATA_HOME}/dailyprojectdata.lib.jar" />
     <fileset file="${env.JUNIT_HOME}/junit-${junit.version}.jar" />
     <fileset file="${env.FINDBUGS_HOME}/lib/annotations.jar" />
     <fileset file="${env.WICKET_HOME}/lib/wicket-${wicket.version}.jar" />
     <fileset dir="${env.JETTY_HOME}/lib">
       <include name="jetty-${jetty.version}.jar" />
       <include name="jetty-util-${jetty.version}.jar" />
       <include name="servlet-api-2.5-${jetty.version}.jar" />
     </fileset>
     <fileset dir="${env.SLF4J_HOME}">
       <include name="slf4j-api-${slf4j.version}.jar" />
       <include name="slf4j-simple-${slf4j.version}.jar" />
     </fileset>
   </path>

  <target name="compile" description="Compiles the code.">
    <!-- Now compile the code into build/classes -->
    <mkdir dir="${build.dir}/classes" />
    <javac srcdir="${src.dir}" destdir="${build.dir}/classes" source="1.5" target="1.5" debug="on" includeAntRuntime="no">
      <classpath refid="compile.classpath" />
      <compilerarg value="-Xlint:all" />
      <compilerarg value="-Werror" />
    </javac>
  </target>

  <target name="clean" description="Delete build/ directory and top-level sensorbase jar files.">
    <delete>
      <fileset dir="${basedir}" includes="sensorbase*.jar" />
    </delete>
    <delete dir="${build.dir}" />
  </target>

  <target name="convertLineEndings" description="Makes line endings compatible with host platform.">
    <fixcrlf srcdir="${basedir}" includes="*.build.xml" />
  </target>

  <target name="run" depends="compile" description="Compiles the sensorbase and starts it up.">
    <java classname="org.hackystat.sensorbase.server.Server" fork="yes">
      <classpath>
        <pathelement location="${build.dir}/classes" />
        <path refid="compile.classpath" />
      </classpath>
    </java>
  </target>

</project>





