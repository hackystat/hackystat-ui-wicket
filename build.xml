<project name="build" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant">
  <description>
  The basic build file for this system.
  </description>


  <!-- Basic directory structure. -->
  <property name="src.dir" location="${basedir}/src" />
  <property name="lib.dir" location="${basedir}/lib" />
  <property name="webapp.dir" location="${basedir}/webapp" />
  <property name="build.dir" location="${basedir}/build" />
  <property name="build.classes.dir" location="${basedir}/build/classes" />

  <!-- Make sure we're running a Java 5 or better. -->
  <condition property="java.5.available">
    <or>
      <contains string="${java.version}" substring="1.5" />
      <contains string="${java.version}" substring="1.6" />
    </or>
  </condition>
  <fail message="This package requires Java 5 or 6." unless="java.5.available" />

  <!-- Make sure we're running Ant 1.7 . -->
  <condition property="ant.1.7.available">
    <contains string="${ant.version}" substring="1.7" />
  </condition>
  <fail message="This package requires Ant 1.7." unless="ant.1.7.available" />

  <!-- Make sure Ivy is installed. -->
  <import file="ivy.build.xml" />
  <available file="${ivy.jar.path}/ivy.jar" type="file" property="ivy.available" />
  <fail message="This package requires Ivy.  To install, invoke 'ant -f ivy.build.xml'." unless="ivy.available" />
  <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpath="${ivy.jar.path}/ivy.jar" />

  <!-- Make sure library.versions.properties is installed, which provides all library version numbers. -->
  <property name="library.versions.path" location="${user.home}/.hackystat/library.versions.properties" />
  <available file="${library.versions.path}" type="file" property="library.versions.available" />
  <fail message="This package requires ~/.hackystat/library.versions.properties.  To install, invoke 'ant -f ivy.build.xml'." unless="library.versions.available" />
  <!-- Now load all library version numbers. -->
  <property file="${library.versions.path}" />

  <!-- Where to look for configuration files (Checkstyle, PMD, FindBugs, etc.) -->
  <property name="configfiles.url" value="http://hackystat.googlecode.com/svn/trunk/configfiles/" />
  <property name="configfiles.dir" location="${lib.dir}/configfiles" />
  <mkdir dir="${configfiles.dir}" />

  <!-- Install libraries required for compilation. -->
  <ivy:retrieve organisation="org.junit" module="junit" revision="${junit.version}" pattern="${lib.dir}/junit/[artifact].[ext]" sync="true" inline="true" conf="default" log="download-only" transitive="false" type="jar" />
  <path id="junit.path" location="${lib.dir}/junit/junit.jar" />

  <ivy:retrieve organisation="org.hackystat" module="hackystat-sensorbase-uh" revision="latest.integration" pattern="${lib.dir}/hackystat-sensorbase-uh/[artifact].[ext]" sync="true" inline="true" conf="default" log="download-only" transitive="false" type="jar" />
  <path id="hackystat-sensorbase-uh.path" location="${lib.dir}/hackystat-sensorbase-uh/sensorbase.jar" />

  <ivy:retrieve organisation="org.hackystat" module="hackystat-analysis-dailyprojectdata" revision="latest.integration" pattern="${lib.dir}/hackystat-analysis-dailyprojectdata/[artifact].[ext]" sync="true" inline="true" conf="default" log="download-only" transitive="false" type="jar" />
  <path id="hackystat-analysis-dailyprojectdata.path" location="${lib.dir}/hackystat-analysis-dailyprojectdata/dailyprojectdata.lib.jar" />

  <ivy:retrieve organisation="org.hackystat" module="hackystat-analysis-telemetry" revision="latest.integration" pattern="${lib.dir}/hackystat-analysis-telemetry/[artifact].[ext]" sync="true" inline="true" conf="default" log="download-only" transitive="false" type="jar" />
  <path id="hackystat-analysis-telemetry.path" location="${lib.dir}/hackystat-analysis-telemetry/telemetry.lib.jar" />

  <ivy:retrieve organisation="org.hackystat" module="hackystat-sensorbase-simdata" revision="latest.integration" pattern="${lib.dir}/hackystat-sensorbase-simdata/[artifact].[ext]" sync="true" inline="true" conf="default" log="download-only" transitive="false" type="jar" />
  <path id="hackystat-sensorbase-simdata.path" location="${lib.dir}/hackystat-sensorbase-simdata/simdata.jar" />

  <ivy:retrieve organisation="org.apache.wicket" module="wicket" revision="${wicket.version}" pattern="${lib.dir}/wicket/[artifact].[ext]" sync="true" inline="true" conf="default, datetime" log="download-only" transitive="false" type="jar" />
  <path id="wicket.path">
    <fileset dir="${lib.dir}/wicket">
      <include name="*.jar" />
    </fileset>
  </path>

  <ivy:retrieve organisation="org.mortbay" module="jetty" revision="${jetty.version}" pattern="${lib.dir}/jetty/[artifact].[ext]" sync="true" inline="true" conf="default" log="download-only" transitive="false" type="jar" />
  <path id="jetty.path">
    <fileset dir="${lib.dir}/jetty">
      <include name="*.jar" />
    </fileset>
  </path>

  <ivy:retrieve organisation="org.slf4j" module="slf4j" revision="${slf4j.version}" pattern="${lib.dir}/slf4j/[artifact].[ext]" sync="true" inline="true" conf="core,simple" log="download-only" transitive="false" type="jar" />
  <path id="slf4j.path">
    <fileset dir="${lib.dir}/slf4j">
      <include name="*.jar" />
    </fileset>
  </path>

  <!-- Basic properties for this system. -->
  <property name="system.name" value="hackystat-ui-wicket" />
  <property name="majorVersionNumber" value="8" />
  <property name="minorVersionNumber" value="x" />
  <tstamp>
    <format property="DAYSTAMP" pattern="Mdd" />
    <format property="TSTAMP" pattern="HH:mm:ss" />
  </tstamp>
  <property name="version" value="${majorVersionNumber}.${minorVersionNumber}.${DAYSTAMP}" />

  <!-- Hackystat sensor definitions and configuration. -->
  <import file="hackystat.build.xml" />
  <property name="hackystat.verbose.mode" value="false" />
  <property name="hackystat.enable" value="true" />
  <!-- define hackystat.enabled if hackystat.enable is true, so we can use it in an 'if' clause -->
  <condition property="hackystat.enabled">
    <istrue value="${hackystat.enable}" />
  </condition>


  <!-- The compile classpath is useful to many tools. -->
  <path id="compile.classpath">
    <path refid="hackystat-sensorbase-uh.path" />
    <path refid="hackystat-analysis-dailyprojectdata.path" />
    <path refid="hackystat-analysis-telemetry.path" />
    <path refid="hackystat-sensorbase-simdata.path" />
    <path refid="junit.path" />
    <path refid="wicket.path" />
    <path refid="jetty.path" />
    <path refid="slf4j.path" />
  </path>

  <path id="run.classpath">
    <path refid="compile.classpath" />
    <pathelement path="${build.classes.dir}" />
  </path>


  <target name="compile" description="Compiles the code and copies resource files to build.classes.dir">
    <!-- Now compile the code into build/classes -->
    <mkdir dir="${build.classes.dir}" />
    <javac srcdir="${src.dir}" destdir="${build.classes.dir}" source="1.5" target="1.5" debug="on" includeAntRuntime="no">
      <classpath refid="compile.classpath" />
      <compilerarg value="-Xlint:all" />
      <compilerarg value="-Werror" />
    </javac>
    <!-- Copy html markup and static files from webapp directory to build.classes.dir -->
    <filter token="version" value="${version}" />
    <filter token="tstamp" value="${TSTAMP}" />
    <copy todir="${build.classes.dir}" filtering="true" overwrite="true">
      <fileset dir="${src.dir}">
        <include name="**/*.*" />
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>

  <target name="clean" description="Delete build/ directory and top-level sensorbase jar files.">
    <delete>
      <fileset dir="${basedir}" includes="sensorbase*.jar" />
    </delete>
    <delete dir="${build.dir}" />
  </target>

  <target name="convertLineEndings" description="Makes line endings compatible with host platform.">
    <fixcrlf srcdir="${basedir}" includes="*.build.xml" />
  </target>

  <target name="run" depends="compile">
    <java classpathref="run.classpath" classname="org.hackystat.projectbrowser.Start" fork="true" />
  </target>

</project>





